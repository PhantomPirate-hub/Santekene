import { PrismaClient, Role, AppointmentStatus, NotificationType, HederaTransactionType, AllergySeverity } from '@prisma/client';
import bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  const hashedPassword = await bcrypt.hash('1234', 10);

  console.log('üå± D√©marrage du seed am√©lior√©...\n');

  // ========================================
  // USERS
  // ========================================
  
  // Super Admin
  const superAdminUser = await prisma.user.upsert({
    where: { email: 'superadmin@santekene.io' },
    update: { name: 'Super Administrator', password: hashedPassword, role: Role.SUPERADMIN },
    create: {
      email: 'superadmin@santekene.io',
      name: 'Super Administrator',
      password: hashedPassword,
      role: Role.SUPERADMIN,
      isVerified: true,
    },
  });
  console.log(`‚úÖ SuperAdmin cr√©√©: ${superAdminUser.email}`);

  // Admin
  const adminUser = await prisma.user.upsert({
    where: { email: 'lassinemale1@gmail.com' },
    update: { name: 'Admin Principal', password: hashedPassword, role: Role.ADMIN },
    create: {
      email: 'lassinemale1@gmail.com',
      name: 'Admin Principal',
      password: hashedPassword,
      role: Role.ADMIN,
      isVerified: true,
    },
  });
  console.log(`‚úÖ Admin cr√©√©: ${adminUser.email}`);

  // Patients
  const patient1User = await prisma.user.upsert({
    where: { email: 'patient1@example.com' },
    update: { name: 'Mamadou Keita', password: hashedPassword, role: Role.PATIENT },
    create: {
      email: 'patient1@example.com',
      name: 'Mamadou Keita',
      password: hashedPassword,
      role: Role.PATIENT,
      phone: '+223 70 12 34 56',
      isVerified: true,
    },
  });

  const patient2User = await prisma.user.upsert({
    where: { email: 'patient2@example.com' },
    update: { name: 'Aissatou Diop', password: hashedPassword, role: Role.PATIENT },
    create: {
      email: 'patient2@example.com',
      name: 'Aissatou Diop',
      password: hashedPassword,
      role: Role.PATIENT,
      phone: '+223 70 23 45 67',
      isVerified: true,
    },
  });

  const patient3User = await prisma.user.upsert({
    where: { email: 'patient3@example.com' },
    update: { name: 'Fatoumata Sow', password: hashedPassword, role: Role.PATIENT },
    create: {
      email: 'patient3@example.com',
      name: 'Fatoumata Sow',
      password: hashedPassword,
      role: Role.PATIENT,
      phone: '+223 70 34 56 78',
      isVerified: true,
    },
  });
  console.log(`‚úÖ 3 Patients cr√©√©s`);

  // Doctors
  const doctor1User = await prisma.user.upsert({
    where: { email: 'doctor1@example.com' },
    update: { name: 'Dr. Amadou Diallo', password: hashedPassword, role: Role.MEDECIN },
    create: {
      email: 'doctor1@example.com',
      name: 'Dr. Amadou Diallo',
      password: hashedPassword,
      role: Role.MEDECIN,
      phone: '+223 76 11 22 33',
      isVerified: true,
    },
  });

  const doctor2User = await prisma.user.upsert({
    where: { email: 'doctor2@example.com' },
    update: { name: 'Dr. Mariam Traor√©', password: hashedPassword, role: Role.MEDECIN },
    create: {
      email: 'doctor2@example.com',
      name: 'Dr. Mariam Traor√©',
      password: hashedPassword,
      role: Role.MEDECIN,
      phone: '+223 76 22 33 44',
      isVerified: true,
    },
  });
  console.log(`‚úÖ 2 M√©decins cr√©√©s\n`);

  // ========================================
  // PROFILES
  // ========================================

  // SuperAdmin Profile
  await prisma.superAdmin.upsert({
    where: { userId: superAdminUser.id },
    update: {},
    create: {
      userId: superAdminUser.id,
      permissions: JSON.stringify({
        manageTokens: true,
        manageAllCenters: true,
        viewAllAudits: true,
        governanceAccess: true,
      }),
    },
  });
  console.log('‚úÖ Profil SuperAdmin cr√©√©');

  // Admin Profile
  await prisma.admin.upsert({
    where: { userId: adminUser.id },
    update: {},
    create: {
      userId: adminUser.id,
    },
  });
  console.log('‚úÖ Profil Admin cr√©√©');

  // Patient Profiles
  const patient1 = await prisma.patient.upsert({
    where: { userId: patient1User.id },
    update: { birthDate: new Date('1995-08-20'), gender: 'Homme', bloodGroup: 'O+' },
    create: {
      userId: patient1User.id,
      birthDate: new Date('1995-08-20'),
      gender: 'Homme',
      bloodGroup: 'O+',
    },
  });

  const patient2 = await prisma.patient.upsert({
    where: { userId: patient2User.id },
    update: { birthDate: new Date('1989-03-12'), gender: 'Femme', bloodGroup: 'A-' },
    create: {
      userId: patient2User.id,
      birthDate: new Date('1989-03-12'),
      gender: 'Femme',
      bloodGroup: 'A-',
    },
  });

  const patient3 = await prisma.patient.upsert({
    where: { userId: patient3User.id },
    update: { birthDate: new Date('2000-11-05'), gender: 'Femme', bloodGroup: 'B+' },
    create: {
      userId: patient3User.id,
      birthDate: new Date('2000-11-05'),
      gender: 'Femme',
      bloodGroup: 'B+',
    },
  });
  console.log('‚úÖ 3 Profils Patient cr√©√©s');

  // Doctor Profiles
  const doctor1 = await prisma.doctor.upsert({
    where: { userId: doctor1User.id },
    update: { speciality: 'M√©decine G√©n√©rale', licenseNumber: 'MG-ML-001' },
    create: {
      userId: doctor1User.id,
      speciality: 'M√©decine G√©n√©rale',
      licenseNumber: 'MG-ML-001',
    },
  });

  const doctor2 = await prisma.doctor.upsert({
    where: { userId: doctor2User.id },
    update: { speciality: 'P√©diatrie', licenseNumber: 'PED-ML-002' },
    create: {
      userId: doctor2User.id,
      speciality: 'P√©diatrie',
      licenseNumber: 'PED-ML-002',
    },
  });
  console.log('‚úÖ 2 Profils M√©decin cr√©√©s\n');

  // ========================================
  // HEALTH CENTERS
  // ========================================
  
  await prisma.healthCenter.createMany({
    data: [
      {
        name: 'H√¥pital du Point G',
        address: 'Avenue Van Vollenhoven',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6587,
        longitude: -7.9895,
        phone: '+223 20 22 27 12',
        email: 'contact@hopitalpointg.ml',
        website: 'https://hopitalpointg.ml',
      },
      {
        name: 'H√¥pital Gabriel Tour√©',
        address: 'Boulevard du Peuple',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6463,
        longitude: -8.0041,
        phone: '+223 20 22 27 02',
        email: 'contact@gabrieltoure.ml',
      },
      {
        name: 'Centre de Sant√© K√®n√® - Bamako',
        address: 'Avenue Modibo Keita',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6392,
        longitude: -8.0029,
        phone: '+223 20 22 33 44',
        email: 'contact.bamako@santekene.ml',
      },
      {
        name: 'Clinique Pasteur',
        address: 'Quartier Hippodrome',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6512,
        longitude: -7.9952,
        phone: '+223 20 21 45 67',
        email: 'contact@pasteur.ml',
      },
      {
        name: 'Centre Hospitalier Universitaire (CHU)',
        address: 'Avenue Kasse Keita',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6421,
        longitude: -7.9978,
        phone: '+223 20 22 35 88',
        email: 'contact@chu-bamako.ml',
      },
      {
        name: 'H√¥pital R√©gional de Sikasso',
        address: 'Route de Koutiala',
        city: 'Sikasso',
        country: 'Mali',
        latitude: 11.3175,
        longitude: -5.6670,
        phone: '+223 21 62 11 22',
        email: 'contact@hr-sikasso.ml',
      },
      {
        name: 'Centre de Sant√© de Kayes',
        address: 'Avenue Soundiata Keita',
        city: 'Kayes',
        country: 'Mali',
        latitude: 14.4512,
        longitude: -11.4445,
        phone: '+223 21 52 21 45',
        email: 'contact@cs-kayes.ml',
      },
      {
        name: 'H√¥pital de S√©gou',
        address: 'Route Nationale 6',
        city: 'S√©gou',
        country: 'Mali',
        latitude: 13.4317,
        longitude: -6.2633,
        phone: '+223 21 32 04 56',
        email: 'contact@hopital-segou.ml',
      },
      {
        name: 'Centre de Sant√© de Mopti',
        address: 'Boulevard de l\'Ind√©pendance',
        city: 'Mopti',
        country: 'Mali',
        latitude: 14.4843,
        longitude: -4.1960,
        phone: '+223 21 43 02 78',
        email: 'contact@cs-mopti.ml',
      },
      {
        name: 'Clinique Arc-en-Ciel',
        address: 'ACI 2000',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6234,
        longitude: -7.9894,
        phone: '+223 20 29 45 67',
        email: 'contact@arcenciel.ml',
      },
      {
        name: 'Centre de Sant√© Communautaire Korofina',
        address: 'Quartier Korofina',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6189,
        longitude: -8.0142,
        phone: '+223 20 22 78 90',
        email: 'cscom.korofina@santekene.ml',
      },
      {
        name: 'H√¥pital du Mali',
        address: 'Hamdallaye ACI',
        city: 'Bamako',
        country: 'Mali',
        latitude: 12.6158,
        longitude: -7.9567,
        phone: '+223 20 29 14 25',
        email: 'contact@hopitaldumali.ml',
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ 12 Centres de sant√© cr√©√©s\n');

  // ========================================
  // MEDICAL DATA
  // ========================================

  // Allergies avec descriptions d√©taill√©es
  await prisma.allergy.createMany({
    data: [
      { 
        allergen: 'P√©nicilline', 
        reaction: '√âruption cutan√©e s√©v√®re, d√©mangeaisons intenses, gonflement du visage', 
        severity: 'HIGH',
        patientId: patient1.id 
      },
      { 
        allergen: 'Arachides', 
        reaction: 'Choc anaphylactique, difficult√© respiratoire, urticaire g√©n√©ralis√©e', 
        severity: 'HIGH',
        patientId: patient2.id 
      },
      { 
        allergen: 'Latex', 
        reaction: 'D√©mangeaisons localis√©es, rougeurs au point de contact', 
        severity: 'MEDIUM',
        patientId: patient2.id 
      },
      { 
        allergen: 'Amoxicilline', 
        reaction: 'Naus√©es, vomissements, diarrh√©e', 
        severity: 'MEDIUM',
        patientId: patient3.id 
      },
      { 
        allergen: 'Poussi√®re', 
        reaction: 'Rhinite allergique, √©ternuements fr√©quents, congestion nasale', 
        severity: 'LOW',
        patientId: patient3.id 
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ Allergies ajout√©es avec descriptions d√©taill√©es');

  // Consultations
  const consultation1 = await prisma.consultation.create({
    data: {
      patientId: patient1.id,
      doctorId: doctor1.id,
      diagnosis: 'Paludisme simple',
      notes: 'Traitement antipaludique prescrit. Repos recommand√©.',
      aiSummary: 'Fi√®vre √©lev√©e et fatigue d√©tect√©es par IA. Score de gravit√©: mod√©r√©.',
      triageScore: 0.82,
      blockchainTxId: 'HCS-TX-1A9Z2E',
    },
  });

  const consultation2 = await prisma.consultation.create({
    data: {
      patientId: patient2.id,
      doctorId: doctor1.id,
      diagnosis: 'R√©action allergique alimentaire',
      notes: '√âviter strictement arachides et fruits √† coque.',
      aiSummary: 'R√©action cutan√©e et gonflement l√©ger observ√©s.',
      triageScore: 0.64,
      blockchainTxId: 'HCS-TX-2B7M3N',
    },
  });

  const consultation3 = await prisma.consultation.create({
    data: {
      patientId: patient3.id,
      doctorId: doctor2.id,
      diagnosis: 'Toux persistante - Bronchite l√©g√®re',
      notes: 'Repos, hydratation, sirop antitussif.',
      aiSummary: 'Sympt√¥mes respiratoires b√©nins. Pas de fi√®vre.',
      triageScore: 0.55,
      blockchainTxId: 'HCS-TX-3C4P5Q',
    },
  });
  console.log('‚úÖ 3 Consultations ajout√©es');

  // Prescriptions with NFT
  await prisma.prescription.createMany({
    data: [
      { 
        consultationId: consultation1.id, 
        medication: 'Artemether-Lumefantrine + Parac√©tamol', 
        dosage: '2 comprim√©s 2x/jour + 1g si fi√®vre', 
        duration: '3 jours',
        nftTokenId: 'HTS-NFT-PRESC-0001',
        hashOnChain: 'HASH-0xA9C3F2D',
      },
      { 
        consultationId: consultation2.id, 
        medication: 'Loratadine (antihistaminique)', 
        dosage: '10mg 1x/jour',
        duration: '5 jours',
        nftTokenId: 'HTS-NFT-PRESC-0002',
        hashOnChain: 'HASH-0xB2D7E1A',
      },
      { 
        consultationId: consultation3.id, 
        medication: 'Sirop antitussif Carbocist√©ine', 
        dosage: '10ml 3x/jour',
        duration: '7 jours',
        nftTokenId: 'HTS-NFT-PRESC-0003',
        hashOnChain: 'HASH-0xC3E9A5B',
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ 3 Prescriptions NFT ajout√©es');

  // Documents m√©dicaux
  await prisma.document.createMany({
    data: [
      { patientId: patient1.id, type: 'Analyse sanguine', url: 'hfs://QmX7b3...', hash: 'HASH-DOC-SANG-001' },
      { patientId: patient1.id, type: 'Test paludisme', url: 'hfs://QmY8c4...', hash: 'HASH-DOC-TEST-002' },
      { patientId: patient2.id, type: 'Radio thorax', url: 'hfs://QmZ9d5...', hash: 'HASH-DOC-RADIO-003' },
      { patientId: patient3.id, type: 'Ordonnance pr√©c√©dente', url: 'hfs://QmA1e6...', hash: 'HASH-DOC-ORD-004' },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ 4 Documents m√©dicaux ajout√©s');

  // Appointments
  await prisma.appointment.createMany({
    data: [
      { 
        patientId: patient1.id, 
        doctorId: doctor1.id, 
        date: new Date(Date.now() + 86400000), // +1 jour
        reason: 'Contr√¥le post-traitement paludisme',
        status: AppointmentStatus.CONFIRMED,
      },
      { 
        patientId: patient2.id, 
        doctorId: doctor1.id, 
        date: new Date(Date.now() + 3 * 86400000), // +3 jours
        reason: 'Suivi allergie alimentaire',
        status: AppointmentStatus.PENDING,
      },
      { 
        patientId: patient3.id, 
        doctorId: doctor2.id, 
        date: new Date(Date.now() + 2 * 86400000), // +2 jours
        reason: 'Consultation p√©diatrique g√©n√©rale',
        status: AppointmentStatus.CONFIRMED,
      },
      { 
        patientId: patient1.id, 
        doctorId: doctor2.id, 
        date: new Date(Date.now() + 7 * 86400000), // +7 jours
        reason: 'Vaccination rappel',
        status: AppointmentStatus.PENDING,
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ 4 Rendez-vous ajout√©s\n');

  // ========================================
  // GAMIFICATION & E-LEARNING
  // ========================================

  // K√®n√®Points
  await prisma.kenePoints.createMany({
    data: [
      { patientId: patient1.id, pointsEarned: 100, reason: 'Premi√®re consultation compl√©t√©e', txHash: 'HTS-TX-KP-0xAAA111' },
      { patientId: patient1.id, pointsEarned: 50, reason: 'Mise √† jour profil sant√©', txHash: 'HTS-TX-KP-0xAAA222' },
      { patientId: patient2.id, pointsEarned: 75, reason: 'Document m√©dical t√©l√©vers√©', txHash: 'HTS-TX-KP-0xBBB111' },
      { patientId: patient3.id, pointsEarned: 150, reason: 'Cours e-learning compl√©t√©', txHash: 'HTS-TX-KP-0xCCC111' },
      { patientId: patient3.id, pointsEarned: 200, reason: 'Certification NFT obtenue', txHash: 'HTS-TX-KP-0xCCC222' },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ K√®n√®Points distribu√©s');

  // E-Learning Courses
  const course1 = await prisma.eLearningCourse.create({
    data: {
      title: 'Pr√©vention du Paludisme',
      description: 'Apprenez les gestes essentiels pour pr√©venir le paludisme au quotidien.',
      content: 'Contenu d√©taill√© du cours sur la pr√©vention du paludisme...',
      duration: 30,
      difficulty: 'D√©butant',
      category: 'Pr√©vention',
      imageUrl: 'https://images.unsplash.com/photo-1584515933487-779824d29309',
      pointsReward: 100,
    },
  });

  const course2 = await prisma.eLearningCourse.create({
    data: {
      title: 'Gestes de Premiers Secours',
      description: 'Les gestes qui sauvent : formation aux premiers secours.',
      content: 'Contenu du cours premiers secours...',
      duration: 45,
      difficulty: 'Interm√©diaire',
      category: 'Urgence',
      imageUrl: 'https://images.unsplash.com/photo-1603398938378-e54eab446dde',
      pointsReward: 150,
    },
  });

  const course3 = await prisma.eLearningCourse.create({
    data: {
      title: 'Nutrition et Sant√©',
      description: 'Les bases d\'une alimentation √©quilibr√©e pour une vie saine.',
      content: 'Contenu du cours nutrition...',
      duration: 25,
      difficulty: 'D√©butant',
      category: 'Nutrition',
      imageUrl: 'https://images.unsplash.com/photo-1490645935967-10de6ba17061',
      pointsReward: 80,
    },
  });
  console.log('‚úÖ 3 Cours e-learning cr√©√©s');

  // User Course Progress
  await prisma.userCourse.createMany({
    data: [
      { userId: patient1User.id, courseId: course1.id, progress: 100, completed: true, completedAt: new Date() },
      { userId: patient2User.id, courseId: course1.id, progress: 65, completed: false },
      { userId: patient3User.id, courseId: course2.id, progress: 100, completed: true, completedAt: new Date() },
      { userId: patient1User.id, courseId: course3.id, progress: 40, completed: false },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ Progressions e-learning enregistr√©es');

  // NFT Certifications
  await prisma.nFTCertification.createMany({
    data: [
      {
        userId: patient1User.id,
        courseId: course1.id,
        nftTokenId: 'HTS-NFT-CERT-0001',
        nftMetadata: JSON.stringify({
          name: 'Certification Pr√©vention Paludisme',
          description: 'Valid√© le ' + new Date().toLocaleDateString('fr-FR'),
          image: 'ipfs://QmCert001...',
        }),
        txHash: 'HTS-TX-CERT-0x1A2B3C',
        ipfsHash: 'QmCert001abc123',
      },
      {
        userId: patient3User.id,
        courseId: course2.id,
        nftTokenId: 'HTS-NFT-CERT-0002',
        nftMetadata: JSON.stringify({
          name: 'Certification Premiers Secours',
          description: 'Valid√© le ' + new Date().toLocaleDateString('fr-FR'),
          image: 'ipfs://QmCert002...',
        }),
        txHash: 'HTS-TX-CERT-0x4D5E6F',
        ipfsHash: 'QmCert002def456',
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ 2 Certifications NFT √©mises\n');

  // ========================================
  // NOTIFICATIONS
  // ========================================

  await prisma.notification.createMany({
    data: [
      {
        userId: patient1User.id,
        title: 'Rendez-vous confirm√©',
        message: 'Votre rendez-vous de contr√¥le avec Dr. Diallo est confirm√© pour demain.',
        type: NotificationType.APPOINTMENT,
      },
      {
        userId: patient1User.id,
        title: 'K√®n√®Points gagn√©s !',
        message: 'Vous avez gagn√© 100 KP pour votre consultation.',
        type: NotificationType.KENEPOINTS,
        isRead: true,
      },
      {
        userId: patient2User.id,
        title: 'Nouvelle ordonnance',
        message: 'Dr. Diallo vous a prescrit un traitement. Consultez votre DSE.',
        type: NotificationType.PRESCRIPTION,
      },
      {
        userId: doctor1User.id,
        title: 'Nouveau rendez-vous',
        message: 'Rendez-vous avec Aissatou Diop pr√©vu dans 3 jours.',
        type: NotificationType.APPOINTMENT,
      },
      {
        userId: patient3User.id,
        title: 'F√©licitations !',
        message: 'Vous avez obtenu votre certification Premiers Secours NFT !',
        type: NotificationType.SUCCESS,
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ Notifications cr√©√©es');

  // ========================================
  // BLOCKCHAIN / HEDERA
  // ========================================

  await prisma.hederaTransaction.createMany({
    data: [
      {
        txId: 'HCS-TX-1A9Z2E',
        type: HederaTransactionType.HCS_MESSAGE,
        userId: doctor1User.id,
        entityId: consultation1.id,
        topicId: '0.0.12345',
        status: 'SUCCESS',
        consensusTimestamp: '2024-10-25T10:30:00Z',
        memo: 'Consultation paludisme - Patient #1',
        cost: 0.0001,
      },
      {
        txId: 'HTS-NFT-PRESC-0001',
        type: HederaTransactionType.HTS_MINT_NFT,
        userId: doctor1User.id,
        entityId: consultation1.id,
        tokenId: '0.0.67890',
        status: 'SUCCESS',
        consensusTimestamp: '2024-10-25T10:31:00Z',
        memo: 'Prescription NFT - Consultation #1',
        cost: 0.05,
        metadata: JSON.stringify({ prescription: 'Artemether-Lumefantrine' }),
      },
      {
        txId: 'HTS-TX-KP-0xAAA111',
        type: HederaTransactionType.HTS_TRANSFER_FT,
        userId: patient1User.id,
        tokenId: '0.0.11111',
        amount: 100,
        status: 'SUCCESS',
        consensusTimestamp: '2024-10-25T10:32:00Z',
        memo: 'K√®n√®Points - Premi√®re consultation',
        cost: 0.0001,
      },
      {
        txId: 'HTS-TX-CERT-0x1A2B3C',
        type: HederaTransactionType.HTS_MINT_NFT,
        userId: patient1User.id,
        entityId: course1.id,
        tokenId: '0.0.22222',
        status: 'SUCCESS',
        consensusTimestamp: '2024-10-25T11:00:00Z',
        memo: 'Certification NFT - Pr√©vention Paludisme',
        cost: 0.05,
        metadata: JSON.stringify({ course: 'Pr√©vention du Paludisme', completed: true }),
      },
      {
        txId: 'HFS-UPLOAD-DOC-001',
        type: HederaTransactionType.HFS_UPLOAD,
        userId: patient1User.id,
        fileId: '0.0.33333',
        status: 'SUCCESS',
        consensusTimestamp: '2024-10-25T09:15:00Z',
        memo: 'Upload analyse sanguine',
        cost: 0.01,
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ 5 Transactions Hedera enregistr√©es');

  // ========================================
  // AUDIT LOG
  // ========================================

  await prisma.auditLog.createMany({
    data: [
      { 
        action: 'USER_LOGIN', 
        userId: patient1User.id, 
        details: 'Connexion r√©ussie depuis IP 192.168.1.10',
        hcsTxId: 'HCS-AUDIT-0x001',
      },
      { 
        action: 'CONSULTATION_CREATE', 
        userId: doctor1User.id, 
        details: 'Dr. Diallo a cr√©√© une consultation pour Mamadou Keita',
        hcsTxId: 'HCS-AUDIT-0x002',
      },
      { 
        action: 'PRESCRIPTION_SIGNED', 
        userId: doctor1User.id, 
        details: 'NFT ordonnance √©mise via HTS pour consultation #1',
        hcsTxId: 'HCS-AUDIT-0x003',
      },
      { 
        action: 'DOCUMENT_UPLOAD', 
        userId: patient1User.id, 
        details: 'Document analyse sanguine t√©l√©vers√© sur HFS',
        hcsTxId: 'HCS-AUDIT-0x004',
      },
      { 
        action: 'KENEPOINTS_EARNED', 
        userId: patient1User.id, 
        details: '100 KP gagn√©s - Premi√®re consultation',
        hcsTxId: 'HCS-AUDIT-0x005',
      },
      { 
        action: 'NFT_CERTIFICATION_MINTED', 
        userId: patient1User.id, 
        details: 'Certification Pr√©vention Paludisme obtenue',
        hcsTxId: 'HCS-AUDIT-0x006',
      },
      { 
        action: 'ADMIN_USER_CREATE', 
        userId: adminUser.id, 
        details: 'Admin a cr√©√© un nouveau compte m√©decin',
        hcsTxId: 'HCS-AUDIT-0x007',
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ Logs d\'audit cr√©√©s\n');

  // ========================================
  // COMMUNAUT√â (Posts, Commentaires, Likes)
  // ========================================

  // Cr√©er des posts de communaut√©
  const post1 = await prisma.communityPost.create({
    data: {
      authorId: patient1User.id,
      title: 'Comment g√©rer le stress au quotidien ?',
      content: `Bonjour √† tous,

Je cherche des conseils pour mieux g√©rer mon stress au travail. J'ai essay√© la m√©ditation mais je n'arrive pas √† m'y tenir r√©guli√®rement. Avez-vous des astuces qui ont march√© pour vous ?

Merci d'avance pour vos retours ! üôè`,
      category: 'Bien-√™tre',
      published: true,
    },
  });

  const post2 = await prisma.communityPost.create({
    data: {
      authorId: doctor1User.id,
      title: 'L\'importance de l\'hydratation pendant la saison s√®che',
      content: `Chers membres de la communaut√©,

Avec la saison s√®che qui approche, je tenais √† vous rappeler l'importance de bien s'hydrater. Voici quelques recommandations :

‚Ä¢ Buvez au moins 2 litres d'eau par jour
‚Ä¢ √âvitez les boissons sucr√©es
‚Ä¢ Mangez des fruits riches en eau (past√®que, orange)
‚Ä¢ Portez un chapeau en sortant

Prenez soin de vous ! üíß`,
      category: 'Sant√©',
      published: true,
    },
  });

  const post3 = await prisma.communityPost.create({
    data: {
      authorId: patient2User.id,
      title: 'Mes astuces pour une alimentation √©quilibr√©e',
      content: `Salut la communaut√© !

Je voulais partager avec vous quelques astuces qui m'ont aid√©e √† mieux manger :

1. Pr√©parer mes repas le dimanche pour toute la semaine
2. Toujours avoir des fruits et l√©gumes frais
3. Limiter la consommation d'aliments transform√©s
4. Boire de l'eau avant chaque repas

N'h√©sitez pas √† partager vos propres astuces ! ü•ó`,
      category: 'Nutrition',
      published: true,
    },
  });

  const post4 = await prisma.communityPost.create({
    data: {
      authorId: patient3User.id,
      title: 'Mon parcours de perte de poids - T√©moignage',
      content: `Bonjour √† tous,

Je voulais partager mon t√©moignage car cela pourrait encourager certains d'entre vous. Il y a 6 mois, j'ai d√©cid√© de prendre ma sant√© en main. J'ai perdu 10kg en combinant :

‚Ä¢ Une alimentation √©quilibr√©e (merci aux conseils du Dr Diallo !)
‚Ä¢ 30 minutes de marche par jour
‚Ä¢ Beaucoup de patience et de pers√©v√©rance

Le plus important : ne pas se d√©courager ! Chaque petit pas compte. üí™

Si vous avez des questions, n'h√©sitez pas !`,
      category: 'T√©moignage',
      published: true,
    },
  });

  const post5 = await prisma.communityPost.create({
    data: {
      authorId: doctor2User.id,
      title: 'Questions fr√©quentes sur la vaccination des enfants',
      content: `Bonjour chers parents,

Je re√ßois souvent les m√™mes questions sur la vaccination. Voici quelques r√©ponses :

**Q: √Ä quel √¢ge commencer ?**
R: D√®s la naissance avec le BCG et l'h√©patite B.

**Q: Y a-t-il des effets secondaires ?**
R: L√©g√®res fi√®vres et rougeurs sont normales. Cela montre que le vaccin agit.

**Q: Quels vaccins sont obligatoires ?**
R: Consultez le calendrier vaccinal national.

N'h√©sitez pas si vous avez d'autres questions ! üíâ`,
      category: 'Question',
      published: true,
    },
  });

  const post6 = await prisma.communityPost.create({
    data: {
      authorId: patient1User.id,
      title: 'Reprise du sport apr√®s une longue pause - Conseils ?',
      content: `Salut les sportifs !

Apr√®s 2 ans sans faire de sport (Covid, travail, etc.), je veux reprendre. Mais je ne sais pas par o√π commencer pour √©viter les blessures.

Quels sports recommandez-vous pour red√©marrer en douceur ? Combien de fois par semaine ?

Merci ! üèÉ`,
      category: 'Sport',
      published: true,
    },
  });

  console.log('‚úÖ 6 Posts de communaut√© cr√©√©s\n');

  // Cr√©er des likes sur les posts
  await prisma.communityLike.createMany({
    data: [
      { postId: post1.id, userId: patient2User.id },
      { postId: post1.id, userId: patient3User.id },
      { postId: post1.id, userId: doctor1User.id },
      { postId: post2.id, userId: patient1User.id },
      { postId: post2.id, userId: patient2User.id },
      { postId: post2.id, userId: patient3User.id },
      { postId: post3.id, userId: patient1User.id },
      { postId: post3.id, userId: doctor1User.id },
      { postId: post4.id, userId: patient1User.id },
      { postId: post4.id, userId: patient2User.id },
      { postId: post4.id, userId: doctor1User.id },
      { postId: post4.id, userId: doctor2User.id },
      { postId: post5.id, userId: patient1User.id },
      { postId: post5.id, userId: patient2User.id },
      { postId: post6.id, userId: patient2User.id },
      { postId: post6.id, userId: doctor1User.id },
    ],
    skipDuplicates: true,
  });

  // Mettre √† jour les compteurs de likes
  await prisma.communityPost.update({ where: { id: post1.id }, data: { likesCount: 3 } });
  await prisma.communityPost.update({ where: { id: post2.id }, data: { likesCount: 3 } });
  await prisma.communityPost.update({ where: { id: post3.id }, data: { likesCount: 2 } });
  await prisma.communityPost.update({ where: { id: post4.id }, data: { likesCount: 4 } });
  await prisma.communityPost.update({ where: { id: post5.id }, data: { likesCount: 2 } });
  await prisma.communityPost.update({ where: { id: post6.id }, data: { likesCount: 2 } });

  console.log('‚úÖ 16 Likes cr√©√©s\n');

  // Cr√©er des commentaires
  await prisma.communityComment.createMany({
    data: [
      {
        postId: post1.id,
        authorId: doctor1User.id,
        content: 'Bonjour Mamadou, essayez de commencer par 5 minutes de respiration profonde chaque matin. C\'est un bon d√©but !',
      },
      {
        postId: post1.id,
        authorId: patient2User.id,
        content: 'J\'ai eu le m√™me probl√®me. Ce qui m\'a aid√© c\'est de faire du yoga le soir avant de dormir. Il y a plein de vid√©os gratuites sur YouTube üòä',
      },
      {
        postId: post2.id,
        authorId: patient1User.id,
        content: 'Merci Docteur pour ces conseils ! Je vais faire plus attention √† mon hydratation.',
      },
      {
        postId: post3.id,
        authorId: patient3User.id,
        content: 'Super astuces ! La pr√©paration des repas le dimanche est vraiment une bonne id√©e. Je vais essayer !',
      },
      {
        postId: post4.id,
        authorId: doctor1User.id,
        content: 'Bravo Fatoumata ! C\'est un excellent r√©sultat. Continue comme √ßa ! üëè',
      },
      {
        postId: post4.id,
        authorId: patient1User.id,
        content: 'Tr√®s inspirant ! Combien de temps √ßa t\'a pris pour voir les premiers r√©sultats ?',
      },
      {
        postId: post4.id,
        authorId: patient2User.id,
        content: 'F√©licitations ! Ton parcours me motive √† commencer moi aussi üí™',
      },
      {
        postId: post5.id,
        authorId: patient1User.id,
        content: 'Merci Docteur ! Tr√®s clair comme explications.',
      },
      {
        postId: post6.id,
        authorId: doctor1User.id,
        content: 'Je recommande la marche rapide ou la natation pour reprendre en douceur. Commence par 2-3 fois par semaine.',
      },
      {
        postId: post6.id,
        authorId: patient3User.id,
        content: 'J\'√©tais dans le m√™me cas ! J\'ai commenc√© par du v√©lo et maintenant je fais du jogging. Vas-y progressivement üö¥',
      },
    ],
    skipDuplicates: true,
  });

  // Mettre √† jour les compteurs de commentaires
  await prisma.communityPost.update({ where: { id: post1.id }, data: { commentsCount: 2 } });
  await prisma.communityPost.update({ where: { id: post2.id }, data: { commentsCount: 1 } });
  await prisma.communityPost.update({ where: { id: post3.id }, data: { commentsCount: 1 } });
  await prisma.communityPost.update({ where: { id: post4.id }, data: { commentsCount: 3 } });
  await prisma.communityPost.update({ where: { id: post5.id }, data: { commentsCount: 1 } });
  await prisma.communityPost.update({ where: { id: post6.id }, data: { commentsCount: 2 } });

  console.log('‚úÖ 10 Commentaires cr√©√©s\n');

  // ========================================
  // MESSAGES (Chat/T√©l√©consultation)
  // ========================================

  await prisma.message.createMany({
    data: [
      {
        senderId: patient1User.id,
        receiverId: doctor1User.id,
        content: 'Bonjour Docteur, j\'ai une question sur mon traitement antipaludique.',
        isRead: true,
      },
      {
        senderId: doctor1User.id,
        receiverId: patient1User.id,
        content: 'Bonjour Mamadou, bien s√ªr. Quelle est votre question ?',
        isRead: true,
      },
      {
        senderId: patient1User.id,
        receiverId: doctor1User.id,
        content: 'Est-ce que je peux prendre le m√©dicament apr√®s le repas ?',
        isRead: false,
      },
      {
        senderId: patient2User.id,
        receiverId: doctor1User.id,
        content: 'Docteur, j\'ai toujours des d√©mangeaisons. Que faire ?',
        isRead: false,
      },
    ],
    skipDuplicates: true,
  });
  console.log('‚úÖ Messages cr√©√©s\n');

  // ========================================
  // SUMMARY
  // ========================================

  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('‚úÖ SEED AM√âLIOR√â TERMIN√â AVEC SUCC√àS !');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
  
  console.log('üìä Donn√©es cr√©√©es :');
  console.log('  ‚Ä¢ 1 SuperAdmin');
  console.log('  ‚Ä¢ 1 Admin');
  console.log('  ‚Ä¢ 2 M√©decins');
  console.log('  ‚Ä¢ 3 Patients');
  console.log('  ‚Ä¢ 12 Centres de sant√©');
  console.log('  ‚Ä¢ 4 Allergies');
  console.log('  ‚Ä¢ 3 Consultations');
  console.log('  ‚Ä¢ 3 Prescriptions NFT');
  console.log('  ‚Ä¢ 4 Documents m√©dicaux');
  console.log('  ‚Ä¢ 4 Rendez-vous');
  console.log('  ‚Ä¢ 5 Transactions K√®n√®Points');
  console.log('  ‚Ä¢ 3 Cours e-learning');
  console.log('  ‚Ä¢ 4 Progressions cours');
  console.log('  ‚Ä¢ 2 Certifications NFT');
  console.log('  ‚Ä¢ 5 Notifications');
  console.log('  ‚Ä¢ 5 Transactions Hedera');
  console.log('  ‚Ä¢ 7 Logs d\'audit');
  console.log('  ‚Ä¢ 6 Posts communaut√©');
  console.log('  ‚Ä¢ 16 Likes');
  console.log('  ‚Ä¢ 10 Commentaires');
  console.log('  ‚Ä¢ 4 Messages\n');

  console.log('üîê Comptes de test (mot de passe: 1234) :');
  console.log('  ‚Ä¢ superadmin@santekene.io - SuperAdmin');
  console.log('  ‚Ä¢ lassinemale1@gmail.com - Admin');
  console.log('  ‚Ä¢ doctor1@example.com - Dr. Diallo (M√©decine G√©n√©rale)');
  console.log('  ‚Ä¢ doctor2@example.com - Dr. Traor√© (P√©diatrie)');
  console.log('  ‚Ä¢ patient1@example.com - Mamadou Keita');
  console.log('  ‚Ä¢ patient2@example.com - Aissatou Diop');
  console.log('  ‚Ä¢ patient3@example.com - Fatoumata Sow\n');
}

main()
  .catch((e) => {
    console.error('‚ùå Erreur lors du seed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });

